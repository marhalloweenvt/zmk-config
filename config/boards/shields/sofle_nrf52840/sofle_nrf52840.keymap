/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

#define U_MOUSE_MOVE_MAX 1500
#define U_MOUSE_SCROLL_MAX 100

#define DEFAULT 0
#define GAMING  1
#define LOWER   2
#define RAISE   3
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

#define PAUSE PAUSE_BREAK
#define BT_0 BT_SEL 0
#define BT_1 BT_SEL 1
#define BT_2 BT_SEL 2
#define BT_3 BT_SEL 3

&mmv {
  time-to-max-speed-ms = <300>;
};

&mwh {
  time-to-max-speed-ms = <600>;
};

&mt {
    tapping-term-ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  GESC |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   \   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |OUT TOG|  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | ENTER | RAISE|  ALT  | GUI   | DEL  |
            bindings = <
&gresc1    &kp N1 &kp N2         &kp N3   &kp N4    &kp N5                               &kp N6     &kp N7    &kp N8    &kp N9   &kp N0   &kp BSLH
&kp TAB    &kp Q  &kp W          &kp E    &kp R     &kp T                                &kp Y      &kp U     &kp I     &kp O    &kp P    &bspc_del
&kp LCTRL  &kp A  &kp S          &kp D    &kp F     &kp G                                &kp H      &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT  &kp Z  &kp X          &kp C    &kp V     &kp B      &kp C_MUTE   &out OUT_TOG &kp N      &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                  &mt LCTRL CAPS &kp LGUI &kp LALT  &mo LOWER  &kp SPACE    &kp RET      &mo RAISE  &kp RALT  &kp RGUI  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp SCROLL_DOWN SCROLL_UP>;
        };

        gaming_layer {
// ------------------------------------------------------------------------------------------------------------
// |  GESC |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   \   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |OUT TOG|  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               |     | ALT  | CTRL | LOWER|  SPACE |  | ENTER | RAISE|  ALT  |       | DEL  |
            bindings = <
&gresc1    &kp N1 &kp N2         &kp N3   &kp N4    &kp N5                               &kp N6     &kp N7    &kp N8    &kp N9   &kp N0   &kp BSLH
&kp TAB    &kp Q  &kp W          &kp E    &kp R     &kp T                                &kp Y      &kp U     &kp I     &kp O    &kp P    &bspc_del
&kp LCTRL  &kp A  &kp S          &kp D    &kp F     &kp G                                &kp H      &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT  &kp Z  &kp X          &kp C    &kp V     &kp B      &kp C_MUTE   &out OUT_TOG &kp N      &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                  &mt LCTRL CAPS &none    &kp LALT  &mo LOWER  &kp SPACE    &kp RET      &mo RAISE  &kp RALT  &none     &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |  `    |   F1 |  F2  |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       | PGUP |  ^   | PGDN |      |      |                   |  -   |  _    |  =    |  +   |       |  F12  |
// |       |   <- |  v   |  ->  | SNIP | TOG 1|                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |   =  |  -   |  +   |  {   |  }   |  BOOT  |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//                |      |      |      |      |        |  |       |      |       |       | INS  |
            bindings = <
&kp GRAVE   &kp F1    &kp F2    &kp F3      &kp F4          &kp F5                         &kp F6    &kp F7    &kp F8          &kp F9    &kp F10   &kp F11
&trans      &kp PG_UP &kp UP    &kp PG_DN   &trans          &trans                         &kp MINUS &kp UNDER &kp EQUAL       &kp PLUS  &trans    &kp F12
&trans      &kp LEFT  &kp DOWN  &kp RIGHT   &kp LG(LS(S))   &tog 1                         &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans      &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC        &kp RBRC  &bootloader   &trans &kp LBKT  &kp RBKT  &kp SEMI        &kp COLON &kp BSLH  &trans
                      &trans    &trans      &trans          &trans    &trans        &trans &trans    &trans    &trans          &kp INS
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |  OUT  |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | TOG 1|                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  | BOOT |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                        &ext_power EP_ON &ext_power EP_OFF &trans   &trans    &trans  &out OUT_TOG
&out OUT_TOG &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                              &kp PG_UP        &trans            &kp UP   &trans    &trans  &trans
&trans       &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &tog GAMING                         &kp PG_DN        &kp LEFT          &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans       &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &trans   &bootloader  &ASDF            &trans            &trans   &trans    &trans  &trans
                          &trans       &trans       &trans       &trans        &trans   &trans       &trans           &trans            &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        gresc1: grave_escape1 {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE_1";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        ASDF: ASDF {
            label = "ASDF";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp A &kp S &kp D &kp F>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp Q &kp W &kp E &kp R &kp N1 &kp N2 &kp N3 &kp N4 &kp EXCL &kp AT &kp HASH &kp DLLR>
                ;
        };
    };
};